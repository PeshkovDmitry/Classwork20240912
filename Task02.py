"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
üìå –ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ –ø—Ä–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –±—ã–ª —Å–æ–∑–¥–∞–Ω –ª–æ–≥–∏—Ä—É—é—â–∏–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
–û–Ω —Å–æ—Ö—Ä–∞–Ω—è–ª –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ—ë —Ä–∞–±–æ—Ç—ã –≤ —Ñ–∞–π–ª.
üìå –ù–∞–ø–∏—à–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –Ω–æ –≤–Ω—É—Ç—Ä–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ–¥—É–ª—å logging.
"""

import logging
from typing import Callable


def mylogger(func: Callable) -> Callable:

    def wrapper(*args, **kwargs):
        global logger
        res = func(*args, **kwargs)
        logger.info(f" {args[0]} / {args[1]} = {res}")
        return res

    return wrapper


@mylogger
def div(a: float, b: float):
    if not b == 0:
        return a / b
    else:
        return "–ù–∞ –Ω–æ–ª—å –¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è!"


logging.basicConfig(level=logging.NOTSET, filename="Task01.txt")
logger = logging.getLogger(__name__)
print(div(5, 2))